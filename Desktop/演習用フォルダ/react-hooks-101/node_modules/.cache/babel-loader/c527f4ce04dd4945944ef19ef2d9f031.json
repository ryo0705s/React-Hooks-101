{"ast":null,"code":"var _jsxFileName = \"/Users/sasakiryou/Desktop/\\u6F14\\u7FD2\\u7528\\u30D5\\u30A9\\u30EB\\u30BF\\u3099/react-hooks-101/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg'\n// import './App.css'\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [name, setName] = useState(props.name);\n  const [price, setPrice] = useState(props.price);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u73FE\\u5728\\u306E\", name, \"\\u306F\\u3001\", price, \"\\u5186\\u3067\\u3059\\u3002\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPrice(price + 1),\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPrice(price - 1),\n      children: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPrice(price - 1),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"O32URV8pwtmjndMB5s70F+uC1iA=\");\n\n_c = App;\nApp.defaultProps = {\n  name: '',\n  price: 1000\n};\nexport default App; // const [count, setCount] = useState(0)\n// const increment = () => setCount(count + 1)\n// const decrement = () => setCount(count - 1)\n// const increment2 = () => setCount(previousCount => previousCount + 1)\n// const decrement2 = () => setCount(previousCount => previousCount - 1)\n// const reset = () => setCount(0)\n// const double = () => setCount(count * 2)\n// const divide3 = () => setCount(previousCount => \n//   previousCount % 3 === 0 ? previousCount / 3 : previousCount)\n// if (previousCount %  3 === 0) {\n//   return previousCount / 3\n// } else {\n//   return previousCount\n// }\n// })\n// <div>count: {count}</div>\n// <div>\n// <button onClick={increment}>+1</button>\n// <button onClick={decrement}>-1</button>\n// </div>\n// <div> \n// <button onClick={increment2}>+1</button>\n// <button onClick={decrement2}>-1</button>\n// </div>\n// <div>\n//   <button onClick={reset}>Reset</button>\n//   <button onClick={double}>×2</button>\n//   <button onClick={divide3}>３の倍数の時だけ３で割る</button>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sasakiryou/Desktop/演習用フォルダ/react-hooks-101/src/App.js"],"names":["React","useState","App","props","name","setName","price","setPrice","defaultProps"],"mappings":";;;AAAA;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AACA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACE,KAAK,CAACC,IAAP,CAAhC;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,KAAK,CAACG,KAAP,CAAlC;AACA,sBACE;AAAA,4BACA;AAAA,uCAAOF,IAAP,kBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADF;AAQD,CAXD;;GAAMJ,G;;KAAAA,G;AAYNA,GAAG,CAACM,YAAJ,GAAmB;AACfJ,EAAAA,IAAI,EAAE,EADS;AAEfE,EAAAA,KAAK,EAAE;AAFQ,CAAnB;AAKA,eAAeJ,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACF;AACM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import logo from './logo.svg'\n// import './App.css'\nimport React, {useState} from 'react'\nconst App = props => {\n  const [name, setName] = useState(props.name)\n  const [price, setPrice] = useState(props.price)\n  return (\n    <>\n    <p>現在の{name}は、{price}円です。</p>\n    <button onClick={() => setPrice(price + 1)}>+1</button>\n    <button onClick={() => setPrice(price - 1)}>-1</button>\n    <button onClick={() => setPrice(price - 1)}>Reset</button>\n    </>\n  )\n}\nApp.defaultProps = {\n    name: '',\n    price: 1000\n  }\n\nexport default App\n\n// const [count, setCount] = useState(0)\n// const increment = () => setCount(count + 1)\n// const decrement = () => setCount(count - 1)\n// const increment2 = () => setCount(previousCount => previousCount + 1)\n// const decrement2 = () => setCount(previousCount => previousCount - 1)\n// const reset = () => setCount(0)\n// const double = () => setCount(count * 2)\n// const divide3 = () => setCount(previousCount => \n//   previousCount % 3 === 0 ? previousCount / 3 : previousCount)\n  // if (previousCount %  3 === 0) {\n  //   return previousCount / 3\n  // } else {\n  //   return previousCount\n  // }\n// })\n      // <div>count: {count}</div>\n      // <div>\n      // <button onClick={increment}>+1</button>\n      // <button onClick={decrement}>-1</button>\n      // </div>\n      // <div> \n      // <button onClick={increment2}>+1</button>\n      // <button onClick={decrement2}>-1</button>\n      // </div>\n      // <div>\n      //   <button onClick={reset}>Reset</button>\n      //   <button onClick={double}>×2</button>\n      //   <button onClick={divide3}>３の倍数の時だけ３で割る</button>\n      // </div>"]},"metadata":{},"sourceType":"module"}